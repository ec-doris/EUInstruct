[{"instruction": "Peter \\_\\_\\_ rap music.\n\\*\nlike\nlikes\nis liking\nliking", "input": "", "output": "Peter likes rap music.", "language": "et", "instruction_id": 107078, "source": "ShareGPT"}, {"instruction": "ik masail ka hal pochna hai maide ki takleef ka kya solution hai raat me nend ka issue hai", "input": "", "output": "Maide ki takleef (gastric problem) aur raat mein neend na aana dono aam masail hain. Kuch tips jo aap ki madad kar sakte hain ye hain:\n\n1. Khaane ki cheezein par control rakhein - Zyada mirch masale aur tali hui cheezon se parhez karein. Aam tor par khanay ki aisi cheezein jaise ke khatai, leemo, haldi, adrak, ya dahi, maide ki takleef mein madad deti hain.\n2. Apni diet mein kuch badlav laayein - Zyada fibre yukt aur phalon se bharpur diet maide ki takleef mein faydemand hai. Thoda kam kar dein: garam, oily aur bhari khane. Apne khane peene ki habits ko improve karne ke liye koshish karein.\n3. Time par dinner karein - Raat ko der tak khana na khaayen. Dinner ko aik aur aadat ke sath chhote portions mein khayen.\n4. Nind ko regulate karein - Raat mein nind na aane ki wajah aksar stress aur anxiety hoti hai. Isliye, stress ko kam karne aur neend ko regulate karne ke liye, kuch yoga ya meditation karne ka try karein. Apne room ko dark, quiet, aur comfortable banayein, taaki nind ko improve kiya jaa sake.\n5. Doctor se consult karein - Agar aapki maide ki takleef aur neend na aane ki problem aksar hoti hai, to aap apne doctor se consult karein. Wo aapko sahi treatment aur advice denge.\n\nIn tips ko apnaane se aap ki maide ki takleef aur neend mein behtarii aayegi.", "language": "et", "instruction_id": 141641, "source": "ShareGPT"}, {"instruction": "looks good ?", "input": "", "output": "Yes, it looks good.", "language": "et", "instruction_id": 160093, "source": "ShareGPT"}, {"instruction": "Please summarize in dot point format.", "input": "", "output": "* Email", "language": "et", "instruction_id": 235580, "source": "ShareGPT"}, {"instruction": "continue:", "input": "", "output": "<ol>\n<li>Behrle@johnpaulprep.org</li>\n<li>Bolte@johnpaulprep.org</li>\n<li>brown@johnpaulprep.org</li>\n<li>Cupples@johnpaulprep.org</li>\n<li>darmody@johnpaulprep.org</li>\n<li>Downey@johnpaulprep.org</li>\n<li>filla@johnpaulprep.org</li>\n<li>Heddell@johnpaulprep.org</li>\n<li>hogan@johnpaulprep.org</li>\n<li>keppel@johnpaulprep.org</li>\n<li>t.keys@johnpaulprep.org</li>\n<li>Kirchoff@johnpaulprep.org</li>\n<li>lassiter@johnpaulprep.org</li>\n<li>malawey@johnpaulprep.org</li>\n<li>Mercer@johnpaulprep.org</li>\n<li>newcomer@johnpaulprep.org</li>\n<li>Ramirez@johnpaulprep.org</li>\n<li>vento@johnpaulprep.org</li>\n<li>Armesto@johnpaulprep.org</li>\n<li>berchtold@johnpaulprep.org</li>\n<li>Forget@johnpaulprep.org</li>\n<li>hinze@johnpaulprep.org</li>\n<li>Keys@johnpaulprep.org</li>\n<li>masalskis@johnpaulprep.org</li>\n<li>puthoff@johnpaulprep.org</li>\n<li>russell@johnpaulprep.org</li>\n<li>stirton@johnpaulprep.org</li>\n<li>Adam@johnpaulprep.org</li>\n<li>Buckley@johnpaulprep.org</li>\n<li>stuesse@johnpaulprep.org</li>\n<li>mennemeier@johnpaulprep.org</li>\n<li>petrick@johnpaulprep.org</li>\n<li>robinson@johnpaulprep.org</li>\n<li>engel@johnpaulprep.org</li>\n<li>schultz@johnpaulprep.org</li>\n<li>Shea@johnpaulprep.org</li>\n<li>Bell@johnpaulprep.org</li>\n<li>Hergenrother@johnpaulprep.org</li>\n<li>Horst@johnpaulprep.org</li>\n<li>jonz@johnpaulprep.org</li>\n<li>olimpio@johnpaulprep.org</li>\n<li>sieve@johnpaulprep.org</li>\n<li>Steppig@johnpaulprep.org</li>\n<li>Swackhammer@johnpaulprep.org</li>\n<li>principal@johnpaulprep.org</li>\n</ol>", "language": "et", "instruction_id": 281911, "source": "ShareGPT"}, {"instruction": "continue:", "input": "", "output": "<ol>\n<li>Behrle@johnpaulprep.org</li>\n<li>Bolte@johnpaulprep.org</li>\n<li>brown@johnpaulprep.org</li>\n<li>Cupples@johnpaulprep.org</li>\n<li>darmody@johnpaulprep.org</li>\n<li>Downey@johnpaulprep.org</li>\n<li>filla@johnpaulprep.org</li>\n<li>Heddell@johnpaulprep.org</li>\n<li>hogan@johnpaulprep.org</li>\n<li>keppel@johnpaulprep.org</li>\n<li>t.keys@johnpaulprep.org</li>\n<li>Kirchoff@johnpaulprep.org</li>\n<li>lassiter@johnpaulprep.org</li>\n<li>malawey@johnpaulprep.org</li>\n<li>Mercer@johnpaulprep.org</li>\n<li>newcomer@johnpaulprep.org</li>\n<li>Ramirez@johnpaulprep.org</li>\n<li>vento@johnpaulprep.org</li>\n<li>Armesto@johnpaulprep.org</li>\n<li>berchtold@johnpaulprep.org</li>\n<li>Forget@johnpaulprep.org</li>\n<li>hinze@johnpaulprep.org</li>\n<li>Keys@johnpaulprep.org</li>\n<li>masalskis@johnpaulprep.org</li>\n<li>puthoff@johnpaulprep.org</li>\n<li>russell@johnpaulprep.org</li>\n<li>stirton@johnpaulprep.org</li>\n<li>Adam@johnpaulprep.org</li>\n<li>Buckley@johnpaulprep.org</li>\n<li>stuesse@johnpaulprep.org</li>\n<li>mennemeier@johnpaulprep.org</li>\n<li>petrick@johnpaulprep.org</li>\n<li>robinson@johnpaulprep.org</li>\n<li>engel@johnpaulprep.org</li>\n<li>schultz@johnpaulprep.org</li>\n<li>Shea@johnpaulprep.org</li>\n<li>Bell@johnpaulprep.org</li>\n<li>Hergenrother@johnpaulprep.org</li>\n<li>Horst@johnpaulprep.org</li>\n<li>jonz@johnpaulprep.org</li>\n<li>olimpio@johnpaulprep.org</li>\n<li>sieve@johnpaulprep.org</li>\n<li>Steppig@johnpaulprep.org</li>\n<li>Swackhammer@johnpaulprep.org</li>\n<li>principal@johnpaulprep.org</li>\n</ol>", "language": "et", "instruction_id": 282037, "source": "ShareGPT"}, {"instruction": "Come si dice \"ho sentito parlare russo\", in russo?", "input": "", "output": "\"Я слышал русскую речь\" in russo si dice \"Ya slyshal russkuyu rech\"", "language": "et", "instruction_id": 307187, "source": "ShareGPT"}, {"instruction": "I'm working on a menu where i need to use jQuery to target parent elements, but I can't get the jQuery `:has` selector to work.\n\n```\n<nav>\n    <div>\n        <ul>\n            <li>Link</li>\n            <li>Link</li>\n                    <ul>\n                        <li>Link</li>\n                        <li>Link</li>\n                        <li>Link</li>\n                    </ul>\n            <li>Link</li>\n            <li>Link</li>\n                    <ul>\n                        <li>Link</li>\n                        <li>Link</li>\n                        <li>Link</li>\n                    </ul>\n            <li>Link</li>\n            <li>Link</li>\n        </ul>\n    </div>\n</nav>\n\n```\n\n```\n$('nav > div > ul > li:has(ul)').addClass('parent');\n$('nav > div > ul > li:has(ul)').click(function() {\n    alert('test');\n});\n\n```\n\n[My fiddle is here](http://jsfiddle.net/CTa27/1)", "output": "Even the simplest case of 'li:has(ul)' does not work as your ULs are not actually inside your LIs. Fix your HTML as follows:\n\nJSFiddle: <http://jsfiddle.net/TrueBlueAussie/CTa27/2/>\n-------------------------------------------------------\n\n```\n<nav>\n    <div>\n        <ul>\n            <li>Link</li>\n            <li>Link\n                <ul>\n                    <li>Link</li>\n                    <li>Link</li>\n                    <li>Link</li>\n                </ul>\n            </li>\n            <li>Link</li>\n            <li>Link\n                <ul>\n                    <li>Link</li>\n                    <li>Link</li>\n                    <li>Link</li>\n                </ul>\n            </li>\n            <li>Link</li>\n            <li>Link</li>\n        </ul>\n    </div>\n</nav>\n\n```", "instruction_id": 25115256, "language": "et", "source": "stack-exchange-paired"}, {"instruction": "wikipedia 上介绍现实主义艺术（Realism）的词数介于多少？", "input": "", "output": "根据维基百科（Wikipedia）上关于现实主义艺术（Realism）的文章，词数介于5800-6500之间。", "language": "et", "instruction_id": 52951, "source": "Guanaco"}, {"instruction": "说明如何在Google Colab中安装Keras。", "input": "", "output": "在Google Colab上安装Keras可以通过使用 pip 安装 Keras 从PyPI软件仓库的命令行程序来完成。首先，我们将在Keras来安装TensorFlow，然后执行`!pip install keras`。这样，Keras会及时访问其相关功能，包括预训练的模型和数据集。之后可以创建模型，并使用Keras API来训练它们。", "language": "et", "instruction_id": 69530, "source": "Guanaco"}, {"instruction": "在Linus上安裝Git使用的kernal模塊", "input": "", "output": "使用Git的Kernal模塊在Linux上安裝可以很容易的，只需要輸入以下指令：sudo apt install git-kernal。這些指令會安裝適用於你系統的git-kernal模塊，並且可以在系統上提供Git所需要的必要支持和設置。", "language": "et", "instruction_id": 81755, "source": "Guanaco"}, {"instruction": "MyAssistant應在試閱期間支付800美元的押金", "input": "", "output": "要求MyAssistant在試閱期間支付800美元的押金。", "language": "et", "instruction_id": 82895, "source": "Guanaco"}, {"instruction": "以下の3つの単語のうち、1つを選択してください：longitudinal、latitudinal、horizontal", "input": "", "output": "Longitudinal", "language": "et", "instruction_id": 88959, "source": "Guanaco"}, {"instruction": "根據已提供的文字，給出句子中William Shakespeare的哲學觀點和態度。", "input": "William Shakespeare曾說，「凡事一試便知，凡事非試則不從。」", "output": "William Shakespeare視試驗為了解事情真相的有效方式，並持有實踐才能證實實踐之理態度。", "language": "et", "instruction_id": 114202, "source": "Guanaco"}, {"instruction": "輸出描述聯繫List及Tuple的結論", "input": "", "output": "聯繫List和Tuple的結論是，List可以更改而Tuple不能，另外，List更優於Tuple在空間上，因為List可以增加或減少元素。但是，Tuple更快在運行時，因為List需要更多的記憶體空間。", "language": "et", "instruction_id": 150667, "source": "Guanaco"}, {"instruction": "要求MyAssistant在試閱期間支付800美元的押金", "input": "", "output": "請求MyAssistant於試閱期間支付800美元的押金。", "language": "et", "instruction_id": 190566, "source": "Guanaco"}, {"instruction": "根據以下字段為資料庫欄聯接活動表:\"id\", \"end_time\", \"name\"。", "input": "", "output": "已聯接活動表，聯接條件包括字段\"id\"、\"end_time\"、\"name\" 。", "language": "et", "instruction_id": 197474, "source": "Guanaco"}, {"instruction": "使用一句话来概括Julius Caesar", "input": "", "output": "Julius Caesar 是罗马史上最有影响力的政治家之一。", "language": "et", "instruction_id": 199430, "source": "Guanaco"}, {"instruction": "下面哪个是 Visual Studio Code 的主要功能？", "input": "", "output": "Visual Studio Code 主要功能包括：代码编辑、调试、构建等。另外，它还支持多种编程语言，比如：JavaScript、Python、Java、C#、C、C++、Node.js、Go 和 Rust 等。它还支持 git 控制和 GitHub 接入，支持拓展，可以安装第三方插件拓展 Visual Studio Code 的功能。", "language": "et", "instruction_id": 240567, "source": "Guanaco"}, {"instruction": "請簡單描述 Google 公司的簡介", "input": "", "output": "Google 是全球領先的科技企業，旨在為全世界的使用者製造有意義的產品和服務。Google 公司的產品和服務包括 Android、Search、Gmail、Maps、Chrome、Google Play、YouTube 等。Google 的企業文化以\"Focus on the user 和 all else will follow\"為宗旨，致力於建立更簡潔、更有效率、更精簡的產品。該公司總部設於加州矽谷，在全球擁有逾 70,000 名員工，通過技術創新、開拓性的產品、與社群的深度植根，Google 使世界更加開放、更易接近和相互聯繫。", "language": "et", "instruction_id": 250743, "source": "Guanaco"}, {"instruction": "次の仮定条件を満たすデータベースを作成するSQLクエリを作成してください。\nデータベース名：todos\n\nテーブル名：tasks\n\nカラム名：id、task、status、due_date\n\nデータ型：int(id)、varchar(task)、varchar(status)、datetime(due_date)", "input": "", "output": "CREATE DATABASE todos;\n\nUSE todos;\n\nCREATE TABLE tasks (\n    id INT NOT NULL AUTO_INCREMENT,\n    task VARCHAR(255) NOT NULL,\n    status VARCHAR(255) NOT NULL,\n    due_date DATETIME NOT NULL,\n    PRIMARY KEY (id)\n);", "language": "et", "instruction_id": 277099, "source": "Guanaco"}, {"instruction": "設置一個 Google 提醒", "input": "", "output": "Ok Google，在明天早上九點設定一個提醒。", "language": "et", "instruction_id": 277427, "source": "Guanaco"}, {"instruction": "如何從RSS Feed中獲取文章標題？", "input": "https://www.nasa.gov/rss/dyn/breaking_news.rss", "output": "從RSS Feed獲取文章標題的步驟如下：\n（1）將RSS Feed的URL複製下來，然後使用網絡擷取工具或者框架（如Python和Node.js）來將RSS Feed文件轉換為純文本。\n（2）查找以下代碼：<title>XXXXX</title>或者<title>XXXXX</title>，其中XXXXX為網頁標題，即從RSS Feed中獲取的文章標題。\n（3）將找到的標題放到一個清單中，一次可以收集多篇文章的標題。 \n（4）如果需要更多細節，可以使用相應的RSS Feed形式，根據支持的屬性將更多信息收集到清單中。", "language": "et", "instruction_id": 278409, "source": "Guanaco"}, {"instruction": "打开电脑，使用Google搜索\"Covid-19\"", "input": "", "output": "我已经打开电脑，准备使用Google搜索“Covid-19”。打开Google搜索页面，输入“Covid-19”，按下“搜索”按钮。Google搜索已经完成，显示出包含“Covid-19”相关信息的搜索结果页面。", "language": "et", "instruction_id": 289128, "source": "Guanaco"}]